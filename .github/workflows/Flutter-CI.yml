# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: FlutterBatteryNotyfier-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PUSH_PACKAGES: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }} # create release only if push to master
    outputs:
      PUSH_PACKAGES: ${{ env.PUSH_PACKAGES }}
      NEW_VERSION: ${{ steps.release.outputs.version }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          
      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"  release-on-push:

  build:
    name: Build Apps
    needs: release-on-push
    runs-on: macos-latest
    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.x'
          channel: "stable"
      - name: Install pub Dependencies
        run: flutter pub get
      - name: Run Tests
        run: flutter test
      - name: Build Android App
        run: flutter build apk --split-per-abi
      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Build Web App
        run: |
          flutter build web
          cd build/web
          zip -r web-app.zip .
      - name: Release Apps
        if: ${{ needs.release-on-push.outputs.PUSH_PACKAGES }}      
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.release-on-push.outputs.NEW_VERSION }}
          name: ${{ env.APP_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "build/app/outputs/apk/release/*.apk,build/ios/iphoneos/app.ipa,build/web/web-app.zip"    